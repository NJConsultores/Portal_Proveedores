package com.infra.factura.business.validation;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.StringWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.xml.XMLConstants;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.jdom.Attribute;
import org.jdom.Document;
import org.jdom.input.JDOMParseException;
import org.jdom.input.SAXBuilder;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import org.xml.sax.SAXException;

import com.infra.cliente.addenda.dto.FeAddendaDto;
import com.infra.cliente.addenda.v2.TipoOperacion;
import com.infra.core.model.UsuarioWS;
import com.infra.factura.bigdata.sat.cfdi.CFDv3_2;
import com.infra.factura.bigdata.sat.cfdi.CFDv3_3;
import com.infra.factura.bigdata.sat.common.addenda.AK;
import com.infra.factura.business.common.GenericCFD;
import com.infra.factura.business.schema.util.StringAndInputstreamUtil;
import com.infra.factura.business.validation.util.FeConstantesValidacion.CFDEstatus;
import com.infra.factura.business.validation.util.FeConstantesValidacion.CFDOrigen;
import com.infra.factura.business.validation.util.FeConstantesValidacion.CFDTipo;
import com.infra.factura.business.validation.util.FeConstantesValidacion.CFDTipo_Cliente;
import com.infra.factura.business.validation.util.FeConstantesValidacion.CFDVersion;
import com.infra.factura.dto.FeFacturaDto;
import com.infra.factura.dto.FeResultadoValidaCFDDto;
import com.infra.factura.exception.UnexpectedRuntimeException;
import com.infra.factura.exception.base.SRFEBaseException;
import com.infra.factura.util.ConstantesGenerales;
import com.infra.factura.util.FechaUtil;

@Component
@Scope("prototype")
public class FeValidadorAgenteAduanalExtranjeroBusiness extends FeValidadorAgenteAduanalExtranjeroBaseBusiness {
	
//	public FeResultadoValidaCFDDto validaFactura(CFDOrigen origen, InputStream xmlInputStream, int idTipoDocumento, FeProveedorDto proveedor, UsuarioWS usuario, Locale locale) {
//		this.origen = origen;
//		String xmlString = null;
//		this.idProveedor = proveedor != null ? proveedor.getIdProveedor() : 0;
//		this.numProveedorSAP = proveedor != null ? proveedor.getNumCta() : null;
//		this.rfcProveedor = proveedor != null ? proveedor.getNumCta() : null;
//		this.locale = locale;
//		this.idTipoDocto = idTipoDocumento;
//		
//		try {                    
//			xmlString = StringAndInputstreamUtil.convertStreamToStringUnicodeEscape(xmlInputStream);
//                                                
//			if(xmlString != null){
//				xmlString = xmlString.trim();
//				xmlString = xmlString.replaceAll("\r\n", " ");
//				xmlString = xmlString.replaceAll("\n", " ");
//				xmlString = xmlString.replaceAll("\r", " ");
//				xmlString = xmlString.replaceAll("\t", " ");
//			}
//			
//			validaFactura(xmlInputStream, xmlString, proveedor, usuario);
//		} catch (IOException e) {                        
//                        e.printStackTrace();
//			final UnexpectedRuntimeException unexpectedRuntimeException = new UnexpectedRuntimeException(e);
//			unexpectedRuntimeException.logException();
//			registraError("validacion-002",unexpectedRuntimeException.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//			feResultadoValidaExtranjeroDto.setValido(false);
//			feResultadoValidaExtranjeroDto.setAceptada(false);
//			feResultadoValidaExtranjeroDto.setErrores(errors);
//		}
//		
//		return feResultadoValidaExtranjeroDto;
//	}
	
//	private FeResultadoValidaCFDDto validaFactura(InputStream xmlInputStream, String xmlString, FeProveedorDto proveedor, UsuarioWS usuario) {
//		Calendar fechaEmision = null;
//		Calendar fechaPermitida = null;
//		
//		logger.info("Validar factura Extranjero");
//		try {                    
//			if(!(xmlInputStream instanceof FileInputStream)){                            
//				xmlInputStream.reset();
//			}
//		} catch (IOException e) {                    
//			logger.error("Error al reprocesar el InputStream del XML", e);
//		}
//		Locale.setDefault(new Locale("es", "ES"));
//		boolean isValidCfdUTF8Encoding = false;
//		GenericCFD cfd = null;
//		SAXBuilder builder = new SAXBuilder();
//		String uriNamespace = null;
//                
//		if (null != xmlString) {                    
//			Document d = null;
//			try {
//				d = builder.build(xmlInputStream);
//				uriNamespace = d.getRootElement().getNamespace().getURI();
//				isValidCfdUTF8Encoding = true;
//			} catch (JDOMParseException e) {
//				if (e.getMessage().contains(ERROR_INVALID_ENCODING_NAME)) {
//					registraError("validacion-003");
//				}else{
//					final UnexpectedRuntimeException unexpectedRuntimeException = new UnexpectedRuntimeException(e);
//					unexpectedRuntimeException.logException();
//					registraError("validacion-004",unexpectedRuntimeException.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//				}
//				guardaFactura = false;
//			} catch (Exception e) {
//				final UnexpectedRuntimeException unexpectedRuntimeException = new UnexpectedRuntimeException(e);
//				unexpectedRuntimeException.logException();
//				registraError("validacion-005",unexpectedRuntimeException.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//				guardaFactura = false;
//			}
//
//			if (isValidCfdUTF8Encoding) {
//				Attribute versionComprobante = null;
//				versionComprobante = d.getRootElement().getAttribute("version");
//				if(versionComprobante == null){
//					versionComprobante = d.getRootElement().getAttribute("Version");
//				}
////				final Attribute tipoDeComprobante = d.getRootElement().getAttribute("tipoDeComprobante");
//				if(versionComprobante != null){
//					if (uriNamespace != null
//							&& uriNamespace.equals(GenericCFD.CFD_2_NAMESPACE)) {
//						version = CFDVersion.getVersionByNumber(versionComprobante.getValue());
//					} else if (uriNamespace != null
//							&& uriNamespace.equals(GenericCFD.CFD_3_NAMESPACE)) {
//						version = CFDVersion.getVersionByNumber(versionComprobante.getValue());
//					}
//				}else{
//					version = CFDVersion.None;
//				}
//				try {                                    
//					switch (version) {
//					case CFDv3_2:
//                        if (isCFDv2(xmlString)) {                                                    
//							registraError("validacion-006",uriNamespace);
//							guardaFactura = false;
//						} else {
//							comprobanteV3_2 = CFDv3_2.newComprobante(xmlString);
//						}
//						break;
//					case CFDv3_3:
//						if (isCFDv2(xmlString)) {                                                    
//							registraError("validacion-006",uriNamespace);
//							guardaFactura = false;
//						} else {
//							comprobanteV3_3 = CFDv3_3.newComprobante(xmlString);
//						}
//						break;
//					default:
//						guardaFactura = false;
//						registraError("validacion-055");
//						break;
//					}
//				} catch (Exception e) {     
//                                    e.printStackTrace();
//					final UnexpectedRuntimeException unexpectedRuntimeException = new UnexpectedRuntimeException(e);
//					unexpectedRuntimeException.logException();
//					registraError("validacion-007",unexpectedRuntimeException.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//					guardaFactura = false;
//				}
//				
//				if (null != comprobanteV3_2 || null != comprobanteV3_3) {
//					try {
//						switch (version) {
//						
//						case CFDv3_2:
//							cfd = new CFDv3_2(comprobanteV3_2);
//							break;
//						case CFDv3_3:
//							cfd = new CFDv3_3(comprobanteV3_3);
//							break;
//						default:
//							break;
//						}
//					} catch (Exception e) {
//						final UnexpectedRuntimeException unexpectedRuntimeException = new UnexpectedRuntimeException(e);
//						unexpectedRuntimeException.logException();
//						registraError("validacion-008",version.name(),unexpectedRuntimeException.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//					}
//					
//					if (null != cfd) {
//						cfd.setXmlDocument(xmlString);
//							if (proveedor != null || true) {
//								if (!esComprobanteAceptado(version)) {
//										SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy");
//										SimpleDateFormat dateFormat2 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
//										
//										fechaEmision = Calendar.getInstance();
//										fechaEmision.setTime(getFecha(version));
//										String mesesAtras = propiedadesUtil.getProperty(ConstantesGenerales.MESES_ATRAS_PERMITIDOS);
//										int meses =  mesesAtras == null || mesesAtras.trim().isEmpty() ?  -3 : (Integer.parseInt(mesesAtras)) * (-1);
//										
//										fechaPermitida = Calendar.getInstance();
//										fechaPermitida.setTime(new Date());
//										fechaPermitida.add(Calendar.MONTH, meses);
//										fechaPermitida.set(Calendar.DATE, 1);
//										fechaPermitida.set(Calendar.HOUR_OF_DAY,0);
//										fechaPermitida.set(Calendar.MINUTE,0);
//										fechaPermitida.set(Calendar.SECOND,0);
//										
//										logger.debug(" ===== > Fecha límite de emisión: " + dateFormat2.format(fechaPermitida.getTime()));
//										logger.debug(" ===== > Fecha de emisión de la factura: " + dateFormat2.format(fechaEmision.getTime()));
//										
//										if(Integer.parseInt(dateFormat.format(new Date()))!=getAnoFactura(version)){
//											registraError("validacion-073");
//										}else if(fechaEmision.compareTo(fechaPermitida) < 0){
//											registraError("validacion-074",String.valueOf(meses*(-1)));
//										}else{
//											try{
//												Calendar newCalendar = Calendar.getInstance();
//												newCalendar.setTime((getFecha(version)));
//												
//												Calendar newCalendarHoy = Calendar.getInstance();
//												newCalendarHoy.setTime(new Date());
//				
//												if(FechaUtil.esMenor(newCalendar, newCalendarHoy)){
//													verificarAddenda(cfd, xmlString);
//												}else{
//													registraError("validacion-075");
//												}
//												
//											} catch (Exception e) {
//												final UnexpectedRuntimeException unexpectedRuntimeException = new UnexpectedRuntimeException(e);
//												unexpectedRuntimeException.logException();
//												registraError("validacion-008",version.name(),unexpectedRuntimeException.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));	
//											}
//											
//											if((origen.equals(CFDOrigen.WEB_PORTAL) && addendaErrorCount != 0)){
//												errorCount = 0;
//												errors.clear();
//											}
//										}
//								}else{
//									guardaFactura = false;
//								}
//							}
//					}
//				}
//			}
//		}
//        
//        procesaResultadoValidacion(version, cfd, proveedor, usuario);
//          
//		return feResultadoValidaExtranjeroDto;
//	}
	
	protected void verificarAddenda(GenericCFD cfd, String xmlString) {
		FeAddendaDto addendaClienteDto = new FeAddendaDto(version, cfd, xmlString);
		
		switch (addendaClienteDto.getTipoCliente()) {
			case SOC:
				if((addendaClienteDto.getPartidas() == null || addendaClienteDto.getPartidas().isEmpty()) &&  
						 (addendaClienteDto.getClaveImpuesto() == null || addendaClienteDto.getClaveImpuesto().trim().isEmpty())){
					registraErrorAddenda("validacion-077");
					addendaClienteDto.setValidCliente(false);
				}
				
				if(addendaClienteDto.getTextoCabecera() == null || addendaClienteDto.getTextoCabecera().trim().isEmpty()){
					registraErrorAddenda("validacion-076");
					addendaClienteDto.setValidCliente(false);
				}
				break;
			case COC:
				if((addendaClienteDto.getNumeroReferencia() == null || addendaClienteDto.getNumeroReferencia().trim().isEmpty()) &&  
						 (addendaClienteDto.getNumeroFactura() == null || addendaClienteDto.getNumeroFactura().equals(""))){
					registraErrorAddenda("validacion-029");
					addendaClienteDto.setValidCliente(false);
				}
				break;
			case AAN:
				if((addendaClienteDto.getNumeroReferencia() == null || addendaClienteDto.getNumeroReferencia().trim().isEmpty()) &&  
						 (addendaClienteDto.getNumeroFactura() == null || addendaClienteDto.getNumeroFactura().equals(""))){
					registraErrorAddenda("validacion-029");
					addendaClienteDto.setValidCliente(false);
				}else if( (addendaClienteDto.getPatente() == null || addendaClienteDto.getPatente().trim().isEmpty() || 
							addendaClienteDto.getAduana() == null || addendaClienteDto.getAduana().trim().isEmpty() || 
							addendaClienteDto.getTipoOperacion() == null || addendaClienteDto.getTipoOperacion().trim().isEmpty() || 
							addendaClienteDto.getPlanta() == null || addendaClienteDto.getPlanta().trim().isEmpty()) && 
							(addendaClienteDto.getNumeroFactura() == null || addendaClienteDto.getNumeroFactura().equals(""))){
					registraErrorAddenda("validacion-093");
					addendaClienteDto.setValidCliente(false);
				}
				
				break;
			default:
				if(addendaClienteDto.isEmpty()){
					contieneAddenda = false;
					registraErrorAddenda("validacion-044");
				}else {
					if(!addendaClienteDto.isAddendaCliente()){
						registraErrorAddenda("validacion-046");
					}else{
						if(addendaClienteDto.isInsufficientInformation()){
							registraErrorAddenda("validacion-047");
						}else{
							addendaClienteDto.setValidCliente(false);
							registraErrorAddenda("validacion-046");//Tiene la misma estructura, pero diferentes campos
						}
					}
				}
				break;
		}
		
		if(!addendaClienteDto.isEmpty() && addendaClienteDto.isAddendaCliente() && addendaClienteDto.isValidCliente()){
			String addendaXML = null;
			switch (version) {
			case CFDv2_2:
			case CFDv2:
				if(null != xmlString){
					final Pattern pattern = Pattern.compile("<requestForPayment" + "(.+?)" + "</requestForPayment>");
					final Matcher matcher = pattern.matcher(xmlString);
					if(matcher.find()){
						addendaXML = xmlString.substring(matcher.start(), matcher.end());
						addendaXML = GenericCFD.XML_HEADER + addendaXML;
					}
				}
				break;
			case CFDv3_2:
			case CFDv3_3:
			case CFDv3:
				if(null != xmlString){
					final Pattern pattern = Pattern.compile("<cfdi:requestForPayment" + "(.+?)" + "</cfdi:requestForPayment>");
					final Matcher matcher = pattern.matcher(xmlString);
					if(matcher.find()){
						addendaXML = xmlString.substring(matcher.start(), matcher.end());
						addendaXML = GenericCFD.XML_HEADER + addendaXML;
						addendaXML = addendaXML.replace("cfdi:", "");
					}
				}
				break;
			default:
				break;
			}
			if(addendaXML != null){
				validarXmlAddenda(addendaClienteDto, addendaXML);
			}
		}
		
		feAddendaDto = addendaClienteDto;
	}
	
	public void validarXmlAddenda(FeAddendaDto addendaPndGDto, String addendaXML) {
		SchemaFactory sf = SchemaFactory.newInstance(XMLConstants.XML_NS_URI);
		Schema schema = null;
		try {
			schema = sf.newSchema(getClass().getResource("/xsd/addenda/addenda.xsd"));
			Validator validator = schema.newValidator();
			AddendaErrorHandler handler = new AddendaErrorHandler();
			if (handler  != null) {
				validator.setErrorHandler(handler);
			}
			validator.validate(new StreamSource(StringAndInputstreamUtil.convertStringToStream(addendaXML)));
		} catch (SAXException e) {
			logger.error("Ocurrió un error al validar la Addenda",e);
		} catch (IOException e) {
			logger.error("Ocurrió un error al validar la Addenda",e);
		}
		
		if (addendaErrorCount > 0) {
			addendaPndGDto.setValidCliente(false);
		}
	}
	
//	protected void procesaResultadoValidacion(CFDVersion version, GenericCFD cfd, FeProveedorDto proveedor, UsuarioWS usuario) {
//		FeFacturaDto facturaDto = null;
//		StringWriter sw = new StringWriter();
//		int idEscenario = 0;
//		
//		feResultadoValidaExtranjeroDto.setProveedorTMS(proveedorTMS);
//		if (errorCount == 0 && addendaErrorCount == 0) {
//			facturaDto = new FeFacturaDto(version, cfd, CFDEstatus.Rechazado);
//			facturaDto.setIdFactura(idFactura);
//			facturaDto.setIdFacturaAduanal(idFacturaAduanal);
//			facturaDto.setIdProveedor(idProveedor);
//			facturaDto.setOrigen(origen);
//			facturaDto.setVersionCFD(CFDVersion.FE);
//			facturaDto.setUuid(numProveedorSAP + "-" + facturaDto.getFolio());
//			facturaDto.setTipoCFD(CFDTipo.values()[idTipoDocto]);
//			facturaDto.setAddendaPnG(feAddendaDto);
//			facturaDto.setAddendaClienteAgenteAduanal(version, cfd);
//			
//			try{
//				facturaDto.setCuentaContableConceptos(String.valueOf(Long.parseLong(rfcProveedor)));
//			}catch(Exception e){
//				try{
//					facturaDto.setCuentaContableConceptos(String.valueOf(Long.parseLong(numProveedorSAP)));
//				}catch(Exception ee){
//					facturaDto.setCuentaContableConceptos(numProveedorSAP);
//				}
//			}
//			
//			facturaDto.setRfcEmisor(rfcProveedor);
//			facturaDto.setRfcProveedor(rfcProveedor);
//			
//			if(facturaDto.getTipoCFD() == CFDTipo.RECIBO){
//				facturaDto.setPatente(feAddendaDto.getPatente());
//				facturaDto.setAduana(feAddendaDto.getAduana());
//				facturaDto.setPedimento(feAddendaDto.getPedimento());
//				facturaDto.setCuentaContableConceptos(obtenerCuentaContable(feAddendaDto.getTipoOperacion()));
//			}else{
//				facturaDto.setReferencia(facturaDto.getReferencia() == null ? "" : facturaDto.getReferencia().trim());
//			}
//			
//			try {
//				//XML ADDENDA
//				AK.guardarV2(sw, feAddendaDto);
//				facturaDto.setXmlAddenda(sw.toString());
//				//TERMINA XML ADDENDA
//				
//				//DETERMINAR ESCENARIO PARA EXTRAJEROS
//				if(feAddendaDto.getTipoCliente().equals(CFDTipo_Cliente.COC)){
//					if(feAddendaDto.getNumeroPedido() != null && !feAddendaDto.getNumeroPedido().trim().isEmpty() && 
//							feAddendaDto.getTextoCabecera() != null && !feAddendaDto.getTextoCabecera().trim().isEmpty()){
//						idEscenario = 3;
//					}else if(feAddendaDto.getDocumentosMaterial() != null && !feAddendaDto.getDocumentosMaterial().isEmpty()){
//						idEscenario = 2;
//					}else {
//						idEscenario = 1;
//					}
//				}else if(feAddendaDto.getTipoCliente().equals(CFDTipo_Cliente.SOC)){
//					if( feAddendaDto.getTextoCabecera() != null && !feAddendaDto.getTextoCabecera().trim().isEmpty() &&  
//						(feAddendaDto.getPartidas() == null || feAddendaDto.getPartidas().size() == 0)){
//						idEscenario = 6;
//					}else if(facturaDto.getTipoCFD().equals(CFDTipo.EGRESO) || facturaDto.getTipoCFD().equals(CFDTipo.E)){
//						idEscenario = 5;
//					}else if(facturaDto.getTipoCFD().equals(CFDTipo.INGRESO) || facturaDto.getTipoCFD().equals(CFDTipo.I)){
//						idEscenario = 4;
//					}
//				}else if(feAddendaDto.getTipoCliente().equals(CFDTipo_Cliente.AAN)){
//					idEscenario = 1;
//				}
//
//				facturaDto.setIdEscenario(idEscenario);
//				//TERMINA DETERMINAR ESCENARIO
//				
//                logger.debug("ID Factura " + facturaDto.getIdFactura());
//                
//                idFactura = facturaDto.getIdFactura();
//                feResultadoValidaExtranjeroDto.setValido(true);
//				feResultadoValidaExtranjeroDto.setAceptada(true);
//			} catch (Exception e) {
//				logger.error("Ocurrió un error al guardar el comprobante.", e);
//				final SRFEBaseException e1 = handleException(e);
//				registraError("validacion-053",e1.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//				feResultadoValidaExtranjeroDto.setValido(true);
//				feResultadoValidaExtranjeroDto.setAceptada(false);
////				notificarResultadoValidacion(CFDEstatus.RechazoFiscal, errors, usuario);
//			}
//			
////			notificarResultadoValidacion(CFDEstatus.Aceptado, null, usuario);
//		} else if(errorCount == 0 && addendaErrorCount != 0){
//			facturaDto = new FeFacturaDto(version, cfd, CFDEstatus.RegistroIncompleto);//Se modifico el estatus de Sin Addenda por Registro Incompleto
//			facturaDto.setIdFactura(idFactura);
//			facturaDto.setIdFacturaAduanal(idFacturaAduanal);
//			facturaDto.setIdProveedor(idProveedor);
//			facturaDto.setOrigen(origen);
//			facturaDto.setVersionCFD(CFDVersion.FE);
//			facturaDto.setUuid(numProveedorSAP + "-" + facturaDto.getFolio());
//			facturaDto.setTipoCFD(CFDTipo.values()[idTipoDocto]);
//			facturaDto.setAddendaClienteAgenteAduanal(version, cfd);
//			facturaDto.setCuentaContableConceptos(String.valueOf(Long.parseLong(rfcProveedor)));
//			facturaDto.setRfcEmisor(rfcProveedor);
//			facturaDto.setRfcProveedor(rfcProveedor);
//
//			if(facturaDto.getTipoCFD() == CFDTipo.RECIBO){
//				facturaDto.setPatente(feAddendaDto.getPatente());
//				facturaDto.setAduana(feAddendaDto.getAduana());
//				facturaDto.setPedimento(feAddendaDto.getPedimento());
//				facturaDto.setCuentaContableConceptos(obtenerCuentaContable(feAddendaDto.getTipoOperacion()));
//			}else{
//				facturaDto.setReferencia(facturaDto.getReferencia() == null ? "" : facturaDto.getReferencia().trim());
//			}
//			
//			try{
//				idFactura = facturaDto.getIdFactura();
//
//				feResultadoValidaExtranjeroDto.setValido(true);
//				feResultadoValidaExtranjeroDto.setAceptada(false);
//				feResultadoValidaExtranjeroDto.setEditarAddenda(true);
//
//				if(feAddendaDto != null && feAddendaDto.isEmpty()){
//					feResultadoValidaExtranjeroDto.setAddendaVacia(true);
//				}else if(feAddendaDto != null && !feAddendaDto.isAddendaCliente()){
//					feResultadoValidaExtranjeroDto.setAddendaPnG(false);
//				}else if(feAddendaDto != null && (feAddendaDto.isInsufficientInformation() || !feAddendaDto.isValidCliente())){
//					feResultadoValidaExtranjeroDto.setAddendaValida(false);
//				}
//				
//			} catch (Exception e) {
//				logger.error("Ocurrió un error al guardar el comprobante.", e);
//				final SRFEBaseException e1 = handleException(e);
//				registraError("validacion-054",e1.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//			}
//		} else {
//			errors.addAll(addendaErrors);
//			feResultadoValidaExtranjeroDto.setErrores(errors);
//			if (guardaFactura) {
//				facturaDto = new FeFacturaDto(version, cfd, CFDEstatus.RechazoFiscal);
//				facturaDto.setIdFactura(idFactura);
//				facturaDto.setIdFacturaAduanal(idFacturaAduanal);
//				facturaDto.setIdProveedor(idProveedor);
//				facturaDto.setOrigen(origen);
//				facturaDto.setVersionCFD(CFDVersion.FE);
//				facturaDto.setUuid(numProveedorSAP + "-" + facturaDto.getFolio());
//				facturaDto.setTipoCFD(CFDTipo.values()[idTipoDocto]);
//				facturaDto.setAddendaClienteAgenteAduanal(version, cfd);
//				facturaDto.setCuentaContableConceptos(String.valueOf(Long.parseLong(rfcProveedor)));
//				facturaDto.setRfcEmisor(rfcProveedor);
//				facturaDto.setRfcProveedor(rfcProveedor);
//				
//				if(facturaDto.getTipoCFD() == CFDTipo.RECIBO){
//					facturaDto.setPatente(feAddendaDto.getPatente());
//					facturaDto.setAduana(feAddendaDto.getAduana());
//					facturaDto.setPedimento(feAddendaDto.getPedimento());
//					facturaDto.setCuentaContableConceptos(obtenerCuentaContable(feAddendaDto.getTipoOperacion()));
//				}else{
//					facturaDto.setReferencia(facturaDto.getReferencia() == null ? "" : facturaDto.getReferencia().trim());
//				}
//
//				try {
//					idFactura = facturaDto.getIdFactura();
//				} catch (Exception e) {
//					logger.error("Ocurrió un error al guardar el comprobante.", e);
//					final SRFEBaseException e1 = handleException(e);
//					registraError("validacion-054",e1.getExceptionInfo().getExceptionID() + ". " + (e.getMessage() != null ? e.getMessage() : ""));
//				}
//			}
//			
////			notificarResultadoValidacion(CFDEstatus.RechazoFiscal, errors, usuario);
//		}
//		
//		errors.addAll(addendaErrors);
//		feResultadoValidaExtranjeroDto.setErrores(errors);
//		feResultadoValidaExtranjeroDto.setFactura(facturaDto);
//		feResultadoValidaExtranjeroDto.setNoProveedorSAP(numProveedorSAP);
//	}
	
//	private void notificarResultadoValidacion(CFDEstatus estatus, List<FeErrorValidacionDto> errores, Usuario usuario) {
//		if(version != null && (version.equals(CFDVersion.CFDv2_2) || version.equals(CFDVersion.CFDv3_2))){
//			notificadorValidacion.notificarProcesoValidacion(version, comprobanteV3_2, errores, estatus, usuario);
//		}else{
//			notificadorValidacion = new FeNotificadorValidacion();
//		}
//	}
	
//	private String obtenerCuentaContable(String tipoOperacion){
//		String cuentaContable = null;
//		
//		if(tipoOperacion != null){
//			if(tipoOperacion.equalsIgnoreCase(TipoOperacion.I.name())){
//				cuentaContable = propiedadesUtil.getProperty(ConstantesGenerales.CUENTA_IMPORTACION);
//			}else{
//				cuentaContable = propiedadesUtil.getProperty(ConstantesGenerales.CUENTA_EXPORTACION);
//			}
//		}
//		
//		return cuentaContable;
//	}
}
